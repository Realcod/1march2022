/*
You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer.
The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.
Increment the large integer by one and return the resulting array of digits.
*/

#include<iostream>
#include<algorithm>
using namespace std;

void reverse(int result[],int count){
	reverse(result,result+count);
}

void plusone(int arr[],int n, int result[]){
	int i=n-1,j=0,count=0,k=1;
	while(i>=0 || k>0){
		result[j]=(arr[i]+k)%10;
		k=(arr[i]+k)/10;
		i--;
		j++;
		count++;
	}
	reverse(result,count);
	for(int i=0;i<count;i++){
		cout<<result[i]<<" ";
	}
}

int main(){
	int n,arr[100],result[100];
	cout<<"Enter the size of the array"<<endl;
	cin>>n;
	
	cout<<"Enter the elements in the array"<<endl;
	for(int i=0;i<n;i++){
		cin>>arr[i];
	}
	plusone(arr,n,result);
	
	
}